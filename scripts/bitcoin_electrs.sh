#!/bin/bash

# Make sure we are not running as root, but that we have sudo privileges.
if [ "$(id -u)" = "0" ]; then
   echo "This script must NOT be run as root (or with sudo)!"
   exit 1
elif [ "$(sudo -l | grep '(ALL : ALL) ALL' | wc -l)" = 0 ]; then
   echo "You do not have enough sudo privileges!"
   exit 1
fi
cd ~; sudo pwd # Print Working Directory; have the user enable sudo access if not already.

# Give the user pertinent information about this script and how to use it.
cat << EOF | sudo tee ~/readme.txt
This readme was generated by the "bitcoin_electrs.sh" install script.
A bitcoin electrum (electrs by Blockstream) node has been installed and readied to receive connections from external services.
Connections must be unblocked via UFW (see commands below).

FYI:
    The "/var/lib/electrs" directory contains debug logs, blockchain, etc.
    The electrs' log files can be view with this file: "/var/log/electrs/debug.log" (links to /var/lib/electrs/bitcoin/LOG)
    electrs configuratijon: /etc/electrs.conf
    The "sudo systemctl status electrs" command show the status of the bitcoin daemon.

Management:
    Command to allow incomming electrs connection on port 50001: 'sudo ufw allow from \$IP to any port 50001 comment "\$DESCRIPTION"'
        Note: Tunneling is the recommended way to access electrs remotely.
    Command to allow incomming "Prometheus monitoring" connection on port 4224: 'sudo ufw allow from \$IP to any port 4224 comment "\$DESCRIPTION"'
EOF
read -p "Press the enter key to continue..."

# Run latest updates and upgrades
sudo apt-get -y update
sudo DEBIAN_FRONTEND=noninteractive apt-get -y install --only-upgrade openssh-server # Upgrade seperatly to ensure non-interactive mode
sudo apt-get -y upgrade

# Install Packages
sudo apt-get -y install ufw clang psmisc
curl https://sh.rustup.rs -sSf | sh -s -- -y
export PATH=$PATH:~/.cargo/bin

# Load global environment variables
source ~/globals.env

# Download electrs, Compile, and Install
cd ~; git clone https://github.com/Blockstream/electrs
git checkout new-index
cd electrs; cargo clean; cargo build --locked --release
sudo install -m 0755 -o root -g root -t /usr/bin ~/electrs/target/release/electrs
cd ~; rm -rf electrs

# Prepare Service Configuration
cat << EOF | sudo tee /etc/systemd/system/electrs.service
[Unit]
Description=electrs
After=network-online.target

[Service]
WorkingDirectory=/var/lib/electrs
ExecStart=/usr/bin/electrs --conf=/etc/electrs.toml

Type=simple
KillMode=process
TimeoutSec=60
Restart=always
RestartSec=60

Environment="RUST_BACKTRACE=1"

### Run as electrs:electrs ###
User=electrs
Group=electrs

### /var/lib/electrs ###
StateDirectory=electrs
StateDirectoryMode=0710

### Hardening measures ###
PrivateTmp=true
ProtectSystem=full
NoNewPrivileges=true
MemoryDenyWriteExecute=true

[Install]
WantedBy=multi-user.target
EOF

# Create a electrs System User
sudo useradd --system --shell=/sbin/nologin electrs

# Generate electrs Configuration File with the Appropriate Permissions
cat << EOF | sudo tee /etc/electrs.toml
# Select the network of choice
network = "bitcoin"

# Bitcoin JSON RPC Authentication
auth = "satoshi:satoshi"

# The listening RPC address of bitcoind, port is usually 8332
daemon_rpc_addr = "$BTC_NODE_IP:8332"

# The listening P2P address of bitcoind, port is usually 8333
daemon_p2p_addr = "$BTC_NODE_IP:8333"

# electrs will listen to all IPs on port 50001 (Access controlled with UFW). Tunneling is the recommended way to access electrs remotely.
electrum_rpc_addr = "0.0.0.0:50001"

# Prometheus monitoring will listen to all IPs on port 4224 (Access controlled with UFW)
monitoring_addr = "0.0.0.0:4224"

# Directory where the index will be stored.
db_dir = "/var/lib/electrs"

# Logging filters, overriding `RUST_LOG` environment variable (see https://docs.rs/env_logger/ for details)
log_filters = "INFO"
EOF
sudo chown root:electrs /etc/electrs.toml
sudo chmod 640 /etc/electrs.toml

# Setup a Symbolic Link to Standardize the Location of electrs' Log Files
sudo mkdir -p /var/log/electrs
sudo ln -s /var/lib/electrs/bitcoin/LOG /var/log/electrs/debug.log

# Install/Setup/Enable the Uncomplicated Firewall (UFW)
sudo ufw default deny incoming
sudo ufw default allow outgoing
sudo ufw allow ssh # Open Default SSH Port
sudo ufw --force enable # Enable Firewall @ Boot and Start it now!

# Reload/Enable System Control for new processes
sudo systemctl daemon-reload
sudo systemctl enable electrs

# Create links (for backup purposes) to all critical files needed to restore this node
cd ~; mkdir backup
sudo ln -s /etc/ufw/user.rules ~/backup
sudo ln -s /etc/ufw/user6.rules ~/backup

# If "~/restore" folder is present then restore all pertinent files; assumes all files are present
if [[ -d ~/restore ]]; then
    # Restore ownership to files
    sudo chown root:root ~/restore/user.rules
    sudo chown root:root ~/restore/user6.rules

    # Move files to their correct locations
    sudo mv ~/restore/user.rules /etc/ufw/user.rules
    sudo mv ~/restore/user6.rules /etc/ufw/user6.rules

    # Remove the "~/restore" folder
    cd ~; sudo rm -rf restore
fi

# Restart the machine
sudo reboot now